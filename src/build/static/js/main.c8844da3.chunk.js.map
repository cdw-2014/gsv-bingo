{"version":3,"sources":["components/MainFeaturedContent.js","components/HomeNavigationOption.js","components/Home.js","components/NavBar.js","components/SuggestionForm.js","components/About.js","components/Header.js","components/CreateBoardForm.js","components/ListBoard.js","components/BingoBoard.js","components/CountdownTimer.js","components/GameBoard.js","components/ViewMyBoards.js","AuthContext.js","components/Login.js","components/Rules.js","components/ContactMe.js","components/FeedbackForm.js","components/ViewAllSuggestions.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","mainFeaturedPost","position","backgroundColor","palette","grey","color","common","white","marginBottom","spacing","backgroundImage","backgroundSize","backgroundRepeat","backgroundPosition","overlay","top","bottom","right","left","mainFeaturedPostContent","padding","breakpoints","up","paddingRight","MainFeaturedContent","props","classes","post","Paper","className","style","image","display","src","alt","imageText","Grid","container","item","md","Typography","component","variant","gutterBottom","title","paragraph","description","card","cardDetails","flex","cardMedia","width","HomeNavigationOption","React","useState","open","setOpen","anchorRef","useRef","handleClose","event","current","contains","target","handleListKeyDown","key","preventDefault","prevOpen","useEffect","focus","xs","CardActionArea","ref","aria-controls","undefined","aria-haspopup","onClick","Card","CardContent","Hidden","xsDown","CardMedia","imageTitle","Popper","anchorEl","role","transition","disablePortal","TransitionProps","placement","Grow","transformOrigin","marginTop","ClickAwayListener","onClickAway","MenuList","autoFocusItem","id","onKeyDown","options","map","option","MenuItem","window","location","href","link","mainGrid","mainFeaturedContent","imgText","navigationOptions","process","Home","Fragment","CssBaseline","Container","maxWidth","root","flexGrow","button","marginRight","axios","require","margin","Alert","elevation","SuggestionForm","amount","setAmount","didSubmit","setDidSubmit","reason","direction","justify","alignItems","autoComplete","onSubmit","e","name","value","difficulty","suggestion","email","user","TextField","required","label","placeholder","select","helperText","onChange","text","Button","type","Snackbar","autoHideDuration","onClose","severity","About","height","frameborder","allow","allowfullscreen","toolbar","borderBottom","divider","toolbarTitle","toolbarSecondary","justifyContent","overflowX","toolbarLink","flexShrink","Header","sections","Toolbar","size","align","noWrap","Link","isAnon","IconButton","Collapse","in","section","url","CreateBoardForm","isFreeSpace","state","setState","typeName","numPieces","pieces","get","then","data","forEach","push","_id","length","alert","handleSubmit","FormControl","RadioGroup","FormControlLabel","control","Radio","disabled","Checkbox","checked","ListBoard","didMount","piece","found","renderListItem","i","updatedPieces","pieceToUpdate","updatePieces","flexWrap","BingoBoard","console","log","splice","renderBingoRow","rowNum","spaing","CountdownTimer","timeStarted","Date","getTime","isPlaying","minutes","seconds","timeLeft","setTimeLeft","timerInterval","setTimeout","difference","minutesPassed","Math","floor","timer","clearInterval","slice","GameBoard","gameId","match","params","board","idsToString","substr","res","catch","err","error","ViewMyBoards","boards","setBoards","setLoading","isCopied","setCopied","fetchedBoards","copyUrl","navigator","clipboard","writeText","getTypeString","renderPastBoards","CardActions","star","index","items","starred","put","handleStar","fill","starredBoards","filter","b","renderStarredBoards","borderTop","AuthContext","createContext","getUser","login","logout","Login","authContext","useContext","currentUser","setCurrentUser","authAction","setAuthAction","handleClick","action","a","appId","client","Stitch","hasAppClient","getAppClient","initializeAppClient","auth","hasRedirectResult","handleRedirectResult","isLoggedIn","profile","replace","credential","GoogleRedirectCredential","loginWithRedirect","authenticate","Tooltip","Rules","ContactMe","setType","subject","TextareaAutosize","aria-label","ViewAllSuggestions","page","max","pageInfo","setPageInfo","suggestions","setSuggestions","userVotes","setUserVotes","isLoading","isReported","setReported","reporting","setReporting","setReason","fetchedSuggestions","maxPages","_userVotes","userVoteArray","votes","v","vote","handleVote","score","newVotes","votesToString","str","getVoteColor","icon","handlePagation","x","renderPagation","getScore","Dialog","modal","DialogTitle","DialogContent","fullWidth","autoFocus","App","JSON","parse","localStorage","getItem","setUser","Provider","setItem","stringify","exact","path","render","config","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.c8844da3.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tmainFeaturedPost        : {\r\n\t\tposition           : 'relative',\r\n\t\tbackgroundColor    : theme.palette.grey[800],\r\n\t\tcolor              : theme.palette.common.white,\r\n\t\tmarginBottom       : theme.spacing(4),\r\n\t\tbackgroundImage    : 'url(https://source.unsplash.com/random)',\r\n\t\tbackgroundSize     : 'cover',\r\n\t\tbackgroundRepeat   : 'no-repeat',\r\n\t\tbackgroundPosition : 'center'\r\n\t},\r\n\toverlay                 : {\r\n\t\tposition        : 'absolute',\r\n\t\ttop             : 0,\r\n\t\tbottom          : 0,\r\n\t\tright           : 0,\r\n\t\tleft            : 0,\r\n\t\tbackgroundColor : 'rgba(0,0,0,.3)'\r\n\t},\r\n\tmainFeaturedPostContent : {\r\n\t\tposition                     : 'relative',\r\n\t\tpadding                      : theme.spacing(3),\r\n\t\t[theme.breakpoints.up('md')]: {\r\n\t\t\tpadding      : theme.spacing(6),\r\n\t\t\tpaddingRight : 0\r\n\t\t}\r\n\t}\r\n}));\r\n\r\nexport default function MainFeaturedContent(props) {\r\n\tconst classes = useStyles();\r\n\tconst { post } = props;\r\n\r\n\treturn (\r\n\t\t<Paper className={classes.mainFeaturedPost} style={{ backgroundImage: `url(${post.image})` }}>\r\n\t\t\t{/* Increase the priority of the hero background image */}\r\n\t\t\t{<img style={{ display: 'none' }} src={post.image} alt={post.imageText} />}\r\n\t\t\t<div className={classes.overlay} />\r\n\t\t\t<Grid container>\r\n\t\t\t\t<Grid item md={6}>\r\n\t\t\t\t\t<div className={classes.mainFeaturedPostContent}>\r\n\t\t\t\t\t\t<Typography component=\"h1\" variant=\"h3\" color=\"inherit\" gutterBottom>\r\n\t\t\t\t\t\t\t{post.title}\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography variant=\"h5\" color=\"inherit\" paragraph>\r\n\t\t\t\t\t\t\t{post.description}\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</Paper>\r\n\t);\r\n}\r\n\r\nMainFeaturedContent.propTypes = {\r\n\tpost : PropTypes.object\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Grow from '@material-ui/core/Grow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles({\r\n\tcard        : {\r\n\t\tdisplay : 'flex'\r\n\t},\r\n\tcardDetails : {\r\n\t\tflex : 1\r\n\t},\r\n\tcardMedia   : {\r\n\t\twidth : 160\r\n\t}\r\n});\r\n\r\nexport default function HomeNavigationOption(props) {\r\n\tconst classes = useStyles();\r\n\tconst { post } = props;\r\n\tconst [\r\n\t\topen,\r\n\t\tsetOpen\r\n\t] = React.useState(false);\r\n\tconst anchorRef = React.useRef(null);\r\n\r\n\tconst handleToggle = () => {\r\n\t\tsetOpen((prevOpen) => !prevOpen);\r\n\t};\r\n\r\n\tconst handleClose = (event) => {\r\n\t\tif (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tsetOpen(false);\r\n\t};\r\n\r\n\tfunction handleListKeyDown(event) {\r\n\t\tif (event.key === 'Tab') {\r\n\t\t\tevent.preventDefault();\r\n\t\t\tsetOpen(false);\r\n\t\t}\r\n\t}\r\n\r\n\tconst prevOpen = React.useRef(open);\r\n\tReact.useEffect(\r\n\t\t() => {\r\n\t\t\tif (prevOpen.current === true && open === false) {\r\n\t\t\t\tanchorRef.current.focus();\r\n\t\t\t}\r\n\r\n\t\t\tprevOpen.current = open;\r\n\t\t},\r\n\t\t[\r\n\t\t\topen\r\n\t\t]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<Grid item xs={12} md={6}>\r\n\t\t\t<CardActionArea\r\n\t\t\t\tcomponent=\"a\"\r\n\t\t\t\tref={anchorRef}\r\n\t\t\t\taria-controls={open ? 'menu-list-grow' : undefined}\r\n\t\t\t\taria-haspopup=\"true\"\r\n\t\t\t\tonClick={handleToggle}\r\n\t\t\t>\r\n\t\t\t\t<Card className={classes.card}>\r\n\t\t\t\t\t<div className={classes.cardDetails}>\r\n\t\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t\t<Typography component=\"h2\" variant=\"h5\">\r\n\t\t\t\t\t\t\t\t{post.title}\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t<Typography variant=\"subtitle1\" paragraph>\r\n\t\t\t\t\t\t\t\t{post.description}\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</CardContent>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<Hidden xsDown>\r\n\t\t\t\t\t\t<CardMedia className={classes.cardMedia} image={post.image} title={post.imageTitle} />\r\n\t\t\t\t\t</Hidden>\r\n\t\t\t\t</Card>\r\n\t\t\t</CardActionArea>\r\n\t\t\t<Popper open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\r\n\t\t\t\t{({ TransitionProps, placement }) => (\r\n\t\t\t\t\t<Grow\r\n\t\t\t\t\t\t{...TransitionProps}\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\ttransformOrigin : placement === 'bottom' ? 'center top' : 'center bottom',\r\n\t\t\t\t\t\t\tmarginTop       : '5px'\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Paper>\r\n\t\t\t\t\t\t\t<ClickAwayListener onClickAway={handleClose}>\r\n\t\t\t\t\t\t\t\t<MenuList autoFocusItem={open} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\r\n\t\t\t\t\t\t\t\t\t{post.options.map((option) => (\r\n\t\t\t\t\t\t\t\t\t\t<MenuItem onClick={() => (window.location.href = option.link)}>\r\n\t\t\t\t\t\t\t\t\t\t\t{option.title}\r\n\t\t\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</MenuList>\r\n\t\t\t\t\t\t\t</ClickAwayListener>\r\n\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t</Grow>\r\n\t\t\t\t)}\r\n\t\t\t</Popper>\r\n\t\t</Grid>\r\n\t);\r\n}\r\n\r\nHomeNavigationOption.propTypes = {\r\n\tpost : PropTypes.object\r\n};\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Container from '@material-ui/core/Container';\r\nimport MainFeaturedContent from './MainFeaturedContent';\r\nimport HomeNavigationOption from './HomeNavigationOption';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tmainGrid : {\r\n\t\tmarginTop : theme.spacing(3)\r\n\t}\r\n}));\r\n\r\nconst sections = [\r\n\t// { title: '1', url: '#' },\r\n\t// { title: '2', url: '#' },\r\n\t// { title: '3', url: '#' },\r\n\t// { title: '4', url: '#' },\r\n\t// { title: '5', url: '#' },\r\n\t// { title: '6', url: '#' },\r\n\t// { title: '7', url: '#' },\r\n\t// { title: '8', url: '#' },\r\n\t// { title: '9', url: '#' },\r\n\t// { title: '0', url: '#' }\r\n];\r\n\r\nconst mainFeaturedContent = {\r\n\ttitle       : 'Welcome',\r\n\tdescription : 'Choose an option below to get started',\r\n\timage       : 'https://source.unsplash.com/random/?map',\r\n\timgText     : 'map image from unsplash.com'\r\n};\r\n\r\nconst navigationOptions = [\r\n\t{\r\n\t\ttitle       : 'Suggestions',\r\n\t\tdescription : 'Create and manage submitted game piece suggestions',\r\n\t\timage       : `${process.env.PUBLIC_URL}/suggestion.jpg`,\r\n\t\timageText   : 'Image Text',\r\n\t\toptions     : [\r\n\t\t\t{ title: 'Submit a New Suggestion', link: '/suggestions/submit' },\r\n\t\t\t{ title: 'View All Suggested Pieces', link: '/suggestions/view/all' }\r\n\t\t\t// { title: 'Manage My Suggestions', link: '/suggestions/view' }\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\ttitle       : 'Game Board',\r\n\t\tdescription : 'Create new or load existing bingo boards',\r\n\t\timage       : `${process.env.PUBLIC_URL}/map.jpg`,\r\n\t\timageText   : 'Image Text',\r\n\t\toptions     : [\r\n\t\t\t{ title: 'Create a New Board', link: '/boards/create' },\r\n\t\t\t{ title: 'Manage Past Boards', link: '/boards/view' }\r\n\t\t]\r\n\t}\r\n];\r\n\r\nexport default function Home() {\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<CssBaseline />\r\n\t\t\t<Container maxWidth=\"lg\">\r\n\t\t\t\t<main>\r\n\t\t\t\t\t<MainFeaturedContent post={mainFeaturedContent} />\r\n\t\t\t\t\t<Grid container spacing={4}>\r\n\t\t\t\t\t\t{navigationOptions.map((post) => <HomeNavigationOption key={post.title} post={post} />)}\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</main>\r\n\t\t\t</Container>\r\n\t\t</React.Fragment>\r\n\t);\r\n}\r\n","import React from 'react';\r\nimport { AppBar, Toolbar, Typography, Button } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot   : {\r\n\t\tflexGrow : 1\r\n\t},\r\n\tbutton : {\r\n\t\tmarginRight : theme.spacing(2)\r\n\t},\r\n\ttitle  : {\r\n\t\tflexGrow : 1\r\n\t}\r\n}));\r\n\r\nexport default function NavBar() {\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<div className={classes.root}>\r\n\t\t\t<AppBar position=\"static\">\r\n\t\t\t\t<Toolbar>\r\n\t\t\t\t\t<Typography variant=\"h6\" className={classes.title}>\r\n\t\t\t\t\t\tGoogle Street View Bingo\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Button>Add Suggestion</Button>\r\n\t\t\t\t</Toolbar>\r\n\t\t\t</AppBar>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React from 'react';\r\nimport { TextField, Grid, Button, MenuItem } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Snackbar } from '@material-ui/core';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nconst axios = require('axios');\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot : {\r\n\t\t'& .MuiTextField-root' : {\r\n\t\t\tmargin : theme.spacing(1),\r\n\t\t\twidth  : '25ch'\r\n\t\t}\r\n\t}\r\n}));\r\n\r\nfunction Alert(props) {\r\n\treturn <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nexport default function SuggestionForm(props) {\r\n\tconst classes = useStyles();\r\n\tconst [\r\n\t\tamount,\r\n\t\tsetAmount\r\n\t] = React.useState('Unknown');\r\n\tconst [\r\n\t\tdidSubmit,\r\n\t\tsetDidSubmit\r\n\t] = React.useState(false);\r\n\r\n\tconst handleClose = (event, reason) => {\r\n\t\tif (reason === 'clickaway') {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetDidSubmit(false);\r\n\t};\r\n\r\n\tconst handleChange = (event) => {\r\n\t\tsetAmount(event.target.value);\r\n\t};\r\n\r\n\t/*TODO: Check DB for exact copy/similar suggestions\r\n          Check suggestion for inappropriate language\r\n  */\r\n\tconst handleSubmit = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\taxios.post(`https://gsv-bingo.herokuapp.com/api/suggestions`, {\r\n\t\t\tname       : event.target[2].value,\r\n\t\t\tdifficulty : event.target[1].value,\r\n\t\t\tsuggestion : event.target[0].value,\r\n\t\t\temail      : props.user.email\r\n\t\t});\r\n\t\tevent.target[0].value = '';\r\n\t\tsetAmount('Unknown');\r\n\t\tsetDidSubmit(true);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Grid\r\n\t\t\tcontainer\r\n\t\t\tdirection=\"column\"\r\n\t\t\tjustify=\"center\"\r\n\t\t\talignItems=\"center\"\r\n\t\t\tspacing={2}\r\n\t\t\tstyle={{ marginTop: '15px' }}\r\n\t\t>\r\n\t\t\t<Grid item xs={8}>\r\n\t\t\t\t<h3>Add a Bingo Piece</h3>\r\n\t\t\t\t<p>\r\n\t\t\t\t\tFill out the form to create a possible bingo piece that others can look for when playing Google\r\n\t\t\t\t\tSteet View Bingo!\r\n\t\t\t\t</p>\r\n\t\t\t</Grid>\r\n\t\t\t<form className={classes.root} autoComplete=\"off\" onSubmit={(e) => handleSubmit(e)}>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Grid container alignItems=\"center\" justify=\"center\" direction=\"column\" spacing={3}>\r\n\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t<TextField required id=\"suggestion\" label=\"Required\" placeholder=\"Suggestion\" />\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\tid=\"select-amount\"\r\n\t\t\t\t\t\t\t\tselect\r\n\t\t\t\t\t\t\t\tvalue={amount}\r\n\t\t\t\t\t\t\t\thelperText=\"About how long will it take to find?\"\r\n\t\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{[\r\n\t\t\t\t\t\t\t\t\t{ text: 'Unknown', id: 0 },\r\n\t\t\t\t\t\t\t\t\t{ text: 'Easy (1-2 minutes)', id: 1 },\r\n\t\t\t\t\t\t\t\t\t{ text: 'Fair (3-5 minutes)', id: 2 },\r\n\t\t\t\t\t\t\t\t\t{ text: 'Hard (Over 5 minutes)', id: 3 }\r\n\t\t\t\t\t\t\t\t].map((option) => (\r\n\t\t\t\t\t\t\t\t\t<MenuItem key={option.id} value={option.id}>\r\n\t\t\t\t\t\t\t\t\t\t{option.text}\r\n\t\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</TextField>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t<TextField id=\"name\" label=\"Display Name\" />\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t<Button variant=\"contained\" type=\"submit\" color=\"primary\" id=\"submit\">\r\n\t\t\t\t\t\t\t\tSubmit\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t\t<Snackbar open={didSubmit} autoHideDuration={5000} onClose={handleClose}>\r\n\t\t\t\t<Alert onClose={handleClose} severity=\"success\">\r\n\t\t\t\t\tSuggestion was successfully submitted!\r\n\t\t\t\t</Alert>\r\n\t\t\t</Snackbar>\r\n\t\t</Grid>\r\n\t);\r\n}\r\n","import React from 'react';\r\nimport { Grid } from '@material-ui/core';\r\n\r\nexport default function About(props) {\r\n\treturn (\r\n\t\t<div className=\"About\">\r\n\t\t\t<Grid container direction=\"colummn\" justify=\"center\" alignItems=\"center\">\r\n\t\t\t\t<Grid container item xs={6} direction=\"colummn\" justify=\"center\" alignItems=\"center\">\r\n\t\t\t\t\t<Grid>\r\n\t\t\t\t\t\t<h3>Origin of Google Street View Bingo</h3>\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\tThis application was inspired by the YouTube channel GeoWizard which uploads geography based\r\n\t\t\t\t\t\t\tvideos such as GeoGuessr gameplay, Sporcle quizzes, and real life adventure vlogs. A viewer\r\n\t\t\t\t\t\t\tby the name of Chris Giles suggested a game where you use Google Street View to find 10\r\n\t\t\t\t\t\t\tspecific items from a list within a time limit which can be seen in the videos below.\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t<iframe\r\n\t\t\t\t\t\t\twidth=\"448\"\r\n\t\t\t\t\t\t\theight=\"252\"\r\n\t\t\t\t\t\t\tsrc=\"https://www.youtube.com/embed/videoseries?list=PL_japiE6QKWoGGZw1t2cebElAki6JU1ik\"\r\n\t\t\t\t\t\t\tframeborder=\"0\"\r\n\t\t\t\t\t\t\tallow=\"autoplay; encrypted-media\"\r\n\t\t\t\t\t\t\tallowfullscreen\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid>\r\n\t\t\t\t\t\t<h3>How to Play</h3>\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\tTo play Google Street View Bingo on this site, you may choose to create a traditional 10\r\n\t\t\t\t\t\t\titem list as seen in GeoWizard's videos, or you can create an actual 5x5 bingo board. While\r\n\t\t\t\t\t\t\tthere are no strict rules of how to play, typically you will want to attempt to find all 10\r\n\t\t\t\t\t\t\titems on the list or 5 in a row from the bingo board.\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\tThe board pieces are 100% crowdsourced by the users of this website. While I will\r\n\t\t\t\t\t\t\toccasionally add suggestions from the YouTube comment sections manually to the database, you\r\n\t\t\t\t\t\t\tcan submit your own by clicking \"Submit a New Suggestion\" from the Suggestions dropdown on\r\n\t\t\t\t\t\t\tthe homepage! Likewise, to create a board, click the \"Create a New Board\" option from the\r\n\t\t\t\t\t\t\tGame Board dropdown on the homepage.\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\tNew features are currently being added to the website to make it easier to keep track of and\r\n\t\t\t\t\t\t\tmanage your suggestions and game boards. While it is not necessary to use the website,\r\n\t\t\t\t\t\t\tsigning in with Google on top right corner of the screen will allow you to use new features\r\n\t\t\t\t\t\t\tas they are added. Note: No personal information other than your name and email is collected\r\n\t\t\t\t\t\t\twhen you link your Google account, and no unsolicited emails will be sent.\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid>\r\n\t\t\t\t\t\t<h3>Disclaimer</h3>\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\tNeither this website nor I have any affiliation with the GeoWizard YouTube channel. To help\r\n\t\t\t\t\t\t\tsupport the development of this website, you may{' '}\r\n\t\t\t\t\t\t\t<a href=\"https://www.paypal.com/paypalme/cdw2014\">donate here</a>.\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Link from '@material-ui/core/Link';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport About from './About';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\ttoolbar          : {\r\n\t\tborderBottom : `1px solid ${theme.palette.divider}`\r\n\t},\r\n\ttoolbarTitle     : {\r\n\t\tflex : 1\r\n\t},\r\n\ttoolbarSecondary : {\r\n\t\tjustifyContent  : 'space-between',\r\n\t\toverflowX       : 'auto',\r\n\t\tbackgroundColor : 'white'\r\n\t},\r\n\ttoolbarLink      : {\r\n\t\tpadding    : theme.spacing(1),\r\n\t\tflexShrink : 0\r\n\t}\r\n}));\r\n\r\nexport default function Header(props) {\r\n\tconst classes = useStyles();\r\n\tconst { sections, title, user } = props;\r\n\tconst [\r\n\t\topen,\r\n\t\tsetOpen\r\n\t] = React.useState(false);\r\n\r\n\tconst renderSignIn = () => (\r\n\t\t<IconButton variant=\"outlined\" size=\"small\" onClick={() => (window.location.href = '/login')}>\r\n\t\t\tSign In\r\n\t\t</IconButton>\r\n\t);\r\n\r\n\tconst renderSignOut = () => {\r\n\t\treturn (\r\n\t\t\t<Button variant=\"outlined\" size=\"small\" onClick={() => (window.location.href = '/login')}>\r\n\t\t\t\tSign Out\r\n\t\t\t</Button>\r\n\t\t);\r\n\t};\r\n\r\n\tconst handleMenu = () => {\r\n\t\tsetOpen(!open);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<Toolbar className={classes.toolbar}>\r\n\t\t\t\t<Button onClick={() => handleMenu()} size=\"small\">\r\n\t\t\t\t\t<MenuIcon />\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Typography\r\n\t\t\t\t\tcomponent=\"h2\"\r\n\t\t\t\t\tvariant=\"h5\"\r\n\t\t\t\t\tcolor=\"inherit\"\r\n\t\t\t\t\talign=\"center\"\r\n\t\t\t\t\tnoWrap\r\n\t\t\t\t\tclassName={classes.toolbarTitle}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Link href=\"/\" color=\"inherit\">\r\n\t\t\t\t\t\t{title}\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</Typography>\r\n\t\t\t\t{user.isAnon ? renderSignIn() : renderSignOut()}\r\n\t\t\t</Toolbar>\r\n\t\t\t<Collapse in={open}>\r\n\t\t\t\t<Toolbar component=\"nav\" variant=\"dense\" className={classes.toolbarSecondary}>\r\n\t\t\t\t\t{sections.map((section) => (\r\n\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\tcolor=\"inherit\"\r\n\t\t\t\t\t\t\tnoWrap\r\n\t\t\t\t\t\t\tkey={section.title}\r\n\t\t\t\t\t\t\tvariant=\"body2\"\r\n\t\t\t\t\t\t\thref={section.url}\r\n\t\t\t\t\t\t\tclassName={classes.toolbarLink}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{section.title}\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Toolbar>\r\n\t\t\t</Collapse>\r\n\t\t</React.Fragment>\r\n\t);\r\n}\r\n\r\nHeader.propTypes = {\r\n\tsections : PropTypes.array,\r\n\ttitle    : PropTypes.string\r\n};\r\n","import React from 'react';\r\nimport { TextField, Grid, Button, FormControl, FormControlLabel, RadioGroup, Radio, Checkbox } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst axios = require('axios');\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot : {\r\n\t\t'& .MuiTextField-root' : {\r\n\t\t\tmargin : theme.spacing(1),\r\n\t\t\twidth  : '25ch'\r\n\t\t}\r\n\t}\r\n}));\r\n\r\nexport default function CreateBoardForm(props) {\r\n\tconst classes = useStyles();\r\n\tconst [\r\n\t\tstate,\r\n\t\tsetState\r\n\t] = React.useState({\r\n\t\ttype        : 'bingo',\r\n\t\tisFreeSpace : true,\r\n\t\ttitle       : '',\r\n\t\tid          : null\r\n\t});\r\n\r\n\tconst handleChange = (event) => {\r\n\t\tsetState({ ...state, type: event.target.value });\r\n\t};\r\n\r\n\tconst handleCheck = (event) => {\r\n\t\tsetState({ ...state, isFreeSpace: !state.isFreeSpace });\r\n\t};\r\n\r\n\tconst handleType = (event) => {\r\n\t\tsetState({ ...state, title: event.target.value });\r\n\t};\r\n\r\n\tconst redirect = (id) => {\r\n\t\tconsole.log('test', id);\r\n\t\twindow.location.href = `/board/play/${id}`;\r\n\t\treturn false;\r\n\t};\r\n\r\n\tconst handleSubmit = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tlet typeName, numPieces;\r\n\t\tif (state.type === 'bingo') {\r\n\t\t\tif (state.isFreeSpace) {\r\n\t\t\t\ttypeName = 'bingo_f';\r\n\t\t\t\tnumPieces = 24;\r\n\t\t\t} else {\r\n\t\t\t\ttypeName = 'bingo_nf';\r\n\t\t\t\tnumPieces = 25;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\ttypeName = 'list';\r\n\t\t\tnumPieces = 10;\r\n\t\t}\r\n\t\tlet pieces = [];\r\n\t\taxios\r\n\t\t\t.get(`https://gsv-bingo.herokuapp.com/api/suggestions/random/${numPieces}`)\r\n\t\t\t.then((data) => {\r\n\t\t\t\tdata.data.forEach((item) => pieces.push(item[0]._id));\r\n\t\t\t})\r\n\t\t\t.then((data) => {\r\n\t\t\t\tif (pieces.length !== numPieces) {\r\n\t\t\t\t\talert('There was a problem creating the board. Please try again.');\r\n\t\t\t\t} else {\r\n\t\t\t\t\taxios\r\n\t\t\t\t\t\t.post(`https://gsv-bingo.herokuapp.com/api/boards`, {\r\n\t\t\t\t\t\t\ttitle  : state.title,\r\n\t\t\t\t\t\t\ttype   : typeName,\r\n\t\t\t\t\t\t\tpieces : pieces,\r\n\t\t\t\t\t\t\temail  : props.user.email\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.then((data) => (window.location.href = `/boards/play/${data.data}`));\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Grid\r\n\t\t\tcontainer\r\n\t\t\titem\r\n\t\t\txs={12}\r\n\t\t\tdirection=\"column\"\r\n\t\t\tjustify=\"space-between\"\r\n\t\t\talignItems=\"center\"\r\n\t\t\tspacing={2}\r\n\t\t\tstyle={{ marginTop: '15px' }}\r\n\t\t\tclassName={classes.root}\r\n\t\t>\r\n\t\t\t<Grid item xs={12}>\r\n\t\t\t\t<h3>Create a Bingo Board</h3>\r\n\t\t\t</Grid>\r\n\t\t\t<Grid item>\r\n\t\t\t\t<form className={classes.root} autoComplete=\"off\" onSubmit={(e) => handleSubmit(e)}>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\tid=\"name\"\r\n\t\t\t\t\t\t\t\tlabel=\"Board Name\"\r\n\t\t\t\t\t\t\t\tvalue={state.title}\r\n\t\t\t\t\t\t\t\tonChange={(e) => handleType(e)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t<FormControl component=\"fieldset\" name=\"board-type\">\r\n\t\t\t\t\t\t\t\t<RadioGroup onChange={(e) => handleChange(e)} value={state.type}>\r\n\t\t\t\t\t\t\t\t\t<FormControlLabel value=\"bingo\" control={<Radio />} label=\"Bingo Board (5x5)\" />\r\n\t\t\t\t\t\t\t\t\t<FormControlLabel value=\"list\" control={<Radio />} label=\"List of 10 Items\" />\r\n\t\t\t\t\t\t\t\t</RadioGroup>\r\n\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t<h5>Additional Settings:</h5>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t<FormControl onChange={(e) => handleCheck(e)} disabled={state.type === 'list'}>\r\n\t\t\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\t\t\tlabel=\"Use free space in center\"\r\n\t\t\t\t\t\t\t\t\tcontrol={<Checkbox checked={state.isFreeSpace} />}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t<Button variant=\"contained\" type=\"submit\" color=\"primary\" id=\"submit\">\r\n\t\t\t\t\t\t\tSubmit\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</form>\r\n\t\t\t</Grid>\r\n\t\t</Grid>\r\n\t);\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Card, CardActionArea } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n\tcard : {\r\n\t\tdisplay   : 'flex',\r\n\t\twidth     : '35%',\r\n\t\theight    : '30px',\r\n\t\tmarginTop : '5px'\r\n\t}\r\n});\r\n\r\nexport default function ListBoard(props) {\r\n\tconst { title } = props;\r\n\tconst classes = useStyles();\r\n\tconst [\r\n\t\tstate,\r\n\t\tsetState\r\n\t] = React.useState({\r\n\t\tdidMount : false,\r\n\t\tpieces   : props.pieces\r\n\t});\r\n\r\n\tReact.useEffect(() => {\r\n\t\tstate.pieces.forEach((piece) => (piece.found = false));\r\n\t\tsetState({ ...state, didMount: true });\r\n\t}, []);\r\n\r\n\tconst updatePieces = (i) => {\r\n\t\tlet updatedPieces = [\r\n\t\t\t...state.pieces\r\n\t\t];\r\n\t\tlet pieceToUpdate = updatedPieces[i];\r\n\t\tpieceToUpdate.found = !pieceToUpdate.found;\r\n\t\tsetState({ ...state, pieces: updatedPieces });\r\n\t};\r\n\r\n\tconst renderListItem = (piece, i) => {\r\n\t\treturn (\r\n\t\t\t<Card key={piece._id} className={classes.card} style={{ backgroundColor: piece.found ? 'green' : 'white' }}>\r\n\t\t\t\t<CardActionArea onClick={(e) => updatePieces(i)}>{piece.suggestion}</CardActionArea>\r\n\t\t\t</Card>\r\n\t\t);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<Grid container item xs={10} justify=\"space-around\" alignItems=\"center\" direction=\"column\" spacing={2}>\r\n\t\t\t\t<h3>{props.title}</h3>\r\n\t\t\t\t{state.didMount && state.pieces.map((piece, i) => renderListItem(piece, i))}\r\n\t\t\t</Grid>\r\n\t\t</React.Fragment>\r\n\t);\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Card, CardActionArea } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n\tcard : {\r\n\t\tdisplay  : 'flex',\r\n\t\twidth    : '15%',\r\n\t\theight   : '8ch',\r\n\t\tflexWrap : 1\r\n\t}\r\n});\r\n\r\nexport default function BingoBoard(props) {\r\n\tconst { type } = props;\r\n\tconst classes = useStyles();\r\n\tconst [\r\n\t\tstate,\r\n\t\tsetState\r\n\t] = React.useState({\r\n\t\tdidMount : false,\r\n\t\tpieces   : props.pieces\r\n\t});\r\n\r\n\tReact.useEffect(() => {\r\n\t\tconsole.log(state.pieces);\r\n\t\tstate.pieces.forEach((piece) => (piece.found = false));\r\n\t\tif (type === 'bingo_f') {\r\n\t\t\tstate.pieces.splice(12, 0, { suggestion: 'FREE SPACE', found: true });\r\n\t\t}\r\n\t\tsetState({ ...state, didMount: true });\r\n\t}, []);\r\n\r\n\tconst updatePieces = (i) => {\r\n\t\tlet updatedPieces = [\r\n\t\t\t...state.pieces\r\n\t\t];\r\n\t\tlet pieceToUpdate = updatedPieces[i];\r\n\t\tpieceToUpdate.found = !pieceToUpdate.found;\r\n\t\tsetState({ ...state, pieces: updatedPieces });\r\n\t};\r\n\r\n\tconst renderBingoRow = (rowNum) => {\r\n\t\treturn (\r\n\t\t\t<Grid\r\n\t\t\t\tcontainer\r\n\t\t\t\titem\r\n\t\t\t\txs={10}\r\n\t\t\t\tjustify=\"space-around\"\r\n\t\t\t\talignItems=\"center\"\r\n\t\t\t\tdirection=\"row\"\r\n\t\t\t\tspaing={2}\r\n\t\t\t\tkey={rowNum}\r\n\t\t\t>\r\n\t\t\t\t{state.pieces.map((piece, i) => {\r\n\t\t\t\t\tif (i >= (rowNum - 1) * 5 && i < rowNum * 5) {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<Card\r\n\t\t\t\t\t\t\t\tkey={piece._id}\r\n\t\t\t\t\t\t\t\tclassName={classes.card}\r\n\t\t\t\t\t\t\t\tstyle={{ backgroundColor: piece.found ? 'green' : 'white' }}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<CardActionArea onClick={(e) => updatePieces(i)}>{piece.suggestion}</CardActionArea>\r\n\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t})}\r\n\t\t\t</Grid>\r\n\t\t);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<h3>{props.title}</h3>\r\n\t\t\t{state.didMount &&\r\n\t\t\t\t[\r\n\t\t\t\t\t1,\r\n\t\t\t\t\t2,\r\n\t\t\t\t\t3,\r\n\t\t\t\t\t4,\r\n\t\t\t\t\t5\r\n\t\t\t\t].map((i) => renderBingoRow(i))}\r\n\t\t</React.Fragment>\r\n\t);\r\n}\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default function CountdownTimer(props) {\r\n\t// const getColor = () => (minutes < 3 ? 'red' : 'primary');\r\n\tconst [\r\n\t\ttimeLeft,\r\n\t\tsetTimeLeft\r\n\t] = React.useState({\r\n\t\ttimeStarted : new Date().getTime(),\r\n\t\tisPlaying   : false,\r\n\t\tminutes     : 20,\r\n\t\tseconds     : 0\r\n\t});\r\n\r\n\tReact.useEffect(\r\n\t\t() => {\r\n\t\t\tlet timerInterval = null;\r\n\t\t\ttimerInterval = setTimeout(() => {\r\n\t\t\t\tif (timeLeft.isPlaying && (timeLeft.minutes > 0 || timeLeft.seconds > 0)) {\r\n\t\t\t\t\tconst currentTime = new Date().getTime();\r\n\t\t\t\t\tconst difference = (currentTime - timeLeft.timeStarted) / 1000;\r\n\t\t\t\t\tconst minutesPassed = Math.floor((difference - 1) / 60);\r\n\t\t\t\t\tconst secondsPassed = Math.floor(difference - minutesPassed * 60);\r\n\t\t\t\t\tconst timer = { minutes: 19 - minutesPassed, seconds: 60 - secondsPassed };\r\n\t\t\t\t\tsetTimeLeft({ ...timeLeft, minutes: timer.minutes, seconds: timer.seconds });\r\n\t\t\t\t}\r\n\t\t\t}, 1000);\r\n\t\t\treturn () => clearInterval(timerInterval);\r\n\t\t},\r\n\t\t[\r\n\t\t\ttimeLeft\r\n\t\t]\r\n\t);\r\n\r\n\t// const updateTime = () => {\r\n\t// \tconst currentTime = new Date().getTime();\r\n\t// \tconst difference = (currentTime - timeLeft.timeStarted) / 1000;\r\n\t// \tconst minutesPassed = Math.floor((difference - 1) / 60);\r\n\t// \tconst secondsPassed = Math.floor(difference - minutesPassed * 60);\r\n\t// \treturn { minutes: 19 - minutesPassed, seconds: 60 - secondsPassed };\r\n\t// };\r\n\r\n\tconst handleClick = (event) => {\r\n\t\tif (timeLeft.isPlaying) {\r\n\t\t\tsetTimeLeft({ ...timeLeft, isPlaying: false });\r\n\t\t} else {\r\n\t\t\tsetTimeLeft({ ...timeLeft, isPlaying: true, timeStarted: new Date().getTime() });\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{timeLeft.isPlaying ? (\r\n\t\t\t\t<h1>\r\n\t\t\t\t\t{('0' + timeLeft.minutes).slice(-2)}:{('0' + timeLeft.seconds).slice(-2)}\r\n\t\t\t\t</h1>\r\n\t\t\t) : null}\r\n\t\t\t<Button\r\n\t\t\t\tvariant=\"contained\"\r\n\t\t\t\tcolor={timeLeft.isPlaying === true ? 'secondary' : 'primary'}\r\n\t\t\t\tonClick={(e) => handleClick(e)}\r\n\t\t\t>\r\n\t\t\t\t{timeLeft.isPlaying === true ? 'Finished' : 'Start'}\r\n\t\t\t</Button>\r\n\r\n\t\t\t{timeLeft.minutes === 0 && timeLeft.seconds === 0 ? alert('Time is up!') : null}\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ListBoard from './ListBoard';\r\nimport BingoBoard from './BingoBoard';\r\nimport CountdownTimer from './CountdownTimer';\r\nimport axios from 'axios';\r\n\r\nexport default function GameBoard(props) {\r\n\tconst { gameId } = props.match.params;\r\n\tconst [\r\n\t\tstate,\r\n\t\tsetState\r\n\t] = React.useState({\r\n\t\tboard    : null,\r\n\t\tdidMount : false\r\n\t});\r\n\r\n\tReact.useEffect(() => {\r\n\t\taxios\r\n\t\t\t.get(`https://gsv-bingo.herokuapp.com/api/boards/${gameId}`)\r\n\t\t\t.then((data) => data.data[0])\r\n\t\t\t.then((board) => {\r\n\t\t\t\tlet idsToString = '';\r\n\t\t\t\tboard.pieces.forEach((id) => (idsToString += id + ','));\r\n\t\t\t\tidsToString = idsToString.substr(0, idsToString.length - 1);\r\n\t\t\t\taxios.get(`https://gsv-bingo.herokuapp.com/api/suggestions/many/${idsToString}`).then((data) => {\r\n\t\t\t\t\tconst pieces = data.data;\r\n\t\t\t\t\tconst res = {\r\n\t\t\t\t\t\t_id    : board._id,\r\n\t\t\t\t\t\ttype   : board.type,\r\n\t\t\t\t\t\ttitle  : board.title,\r\n\t\t\t\t\t\tpieces : pieces\r\n\t\t\t\t\t};\r\n\t\t\t\t\tsetState({ ...state, board: res, didMount: true });\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.error(err);\r\n\t\t\t});\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<Grid container item xs={12} justify=\"center\" alignItems=\"center\" direction=\"column\" spacing={2}>\r\n\t\t\t{state.didMount && console.log(state.board) && state.board.type === 'list' ? (\r\n\t\t\t\t<ListBoard {...state.board} />\r\n\t\t\t) : (\r\n\t\t\t\tstate.didMount && <BingoBoard {...state.board} />\r\n\t\t\t)}\r\n\t\t\t<CountdownTimer />\r\n\t\t</Grid>\r\n\t);\r\n}\r\n\r\nGameBoard.propTypes = {\r\n\tgameId : PropTypes.string\r\n};\r\n","import React from 'react';\r\nimport {\r\n\tTextField,\r\n\tGrid,\r\n\tCard,\r\n\tButton,\r\n\tFormControl,\r\n\tFormControlLabel,\r\n\tRadioGroup,\r\n\tRadio,\r\n\tCheckbox,\r\n\tTypography,\r\n\tCardContent,\r\n\tCardActions,\r\n\tIconButton\r\n} from '@material-ui/core';\r\nimport { Snackbar } from '@material-ui/core';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst axios = require('axios');\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot : {\r\n\t\t'& .MuiTextField-root' : {\r\n\t\t\tmargin : theme.spacing(1),\r\n\t\t\twidth  : '25ch'\r\n\t\t}\r\n\t}\r\n}));\r\n\r\nfunction Alert(props) {\r\n\treturn <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nexport default function ViewMyBoards(props) {\r\n\tconst classes = useStyles();\r\n\tconst [\r\n\t\tboards,\r\n\t\tsetBoards\r\n\t] = React.useState([]);\r\n\tconst [\r\n\t\tisLoading,\r\n\t\tsetLoading\r\n\t] = React.useState(true);\r\n\tconst [\r\n\t\tisCopied,\r\n\t\tsetCopied\r\n\t] = React.useState(false);\r\n\r\n\tReact.useEffect(() => {\r\n\t\taxios\r\n\t\t\t.get(`https://gsv-bingo.herokuapp.com/api/boards/user/${props.user.email}`)\r\n\t\t\t.then((data) => data.data)\r\n\t\t\t.then((fetchedBoards) => setBoards(fetchedBoards))\r\n\t\t\t.then(() => setLoading(false));\r\n\t}, []);\r\n\r\n\tconst handleStar = (id, star, index) => {\r\n\t\tlet items = [\r\n\t\t\t...boards\r\n\t\t];\r\n\t\tlet item = { ...boards[index], starred: !star };\r\n\t\titems[index] = item;\r\n\t\tsetBoards(items);\r\n\t\taxios.put(`https://gsv-bingo.herokuapp.com/api/boards/id=${id}&star=${!star}`);\r\n\t};\r\n\r\n\tconst copyUrl = (id) => {\r\n\t\tnavigator.clipboard.writeText(`https://gsv-bingo.herokuapp.com/boards/play/${id}`).then(() => setCopied(true));\r\n\t};\r\n\r\n\tconst getTypeString = (type) => {\r\n\t\tswitch (type) {\r\n\t\t\tcase 'bingo_f':\r\n\t\t\t\treturn 'Standard Bingo Board';\r\n\t\t\tcase 'bingo_nf':\r\n\t\t\t\treturn 'Bingo Board Without Free Space';\r\n\t\t\tcase 'list':\r\n\t\t\t\treturn 'List of 10';\r\n\t\t\tdefault:\r\n\t\t\t\treturn 'Board';\r\n\t\t}\r\n\t};\r\n\r\n\tconst renderStarredBoards = () => {\r\n\t\tconst starredBoards = boards.filter((b) => b.starred === true);\r\n\t\treturn (\r\n\t\t\t<Grid container item xs={9} spacing={3} style={{ marginBottom: '15px' }}>\r\n\t\t\t\t{starredBoards.map((board, i) => (\r\n\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t<Card variant=\"outlined\">\r\n\t\t\t\t\t\t\t<CardContent style={{ height: '8ch' }}>\r\n\t\t\t\t\t\t\t\t<Typography variant=\"body1\" gutterBottom>\r\n\t\t\t\t\t\t\t\t\t{board.title}\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t<Typography variant=\"body2\" color=\"textSecondary\" gutterBottom>\r\n\t\t\t\t\t\t\t\t\t{getTypeString(board.type)}\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t</CardContent>\r\n\t\t\t\t\t\t\t<CardActions>\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\tonClick={() => (window.location.href = `/boards/play/${board._id}`)}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tPlay!\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t<IconButton onClick={() => copyUrl(board._id)}>\r\n\t\t\t\t\t\t\t\t\t<ShareIcon />\r\n\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t</CardActions>\r\n\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t))}\r\n\t\t\t</Grid>\r\n\t\t);\r\n\t};\r\n\r\n\tconst renderCreateBoard = () => (\r\n\t\t<React.Fragment>\r\n\t\t\t<Grid container item xs={9} spacing={3} style={{ marginBottom: '15px' }}>\r\n\t\t\t\t<Typography component=\"h2\" variant=\"h5\" color=\"inherit\" align=\"center\" noWrap>\r\n\t\t\t\t\tCreate Your First Board\r\n\t\t\t\t</Typography>\r\n\t\t\t</Grid>\r\n\t\t\t<Grid container item xs={9} spacing={3} style={{ marginBottom: '15px' }}>\r\n\t\t\t\t<p>It looks like you have not created any boards! Click the button below to create your first board.</p>\r\n\t\t\t</Grid>\r\n\t\t\t<Grid container item xs={9} spacing={3} style={{ marginBottom: '15px' }}>\r\n\t\t\t\t<Button variant=\"contained\" color=\"primary\" onClick={() => (window.location.href = '/boards/create')}>\r\n\t\t\t\t\tCreate Board\r\n\t\t\t\t</Button>\r\n\t\t\t</Grid>\r\n\t\t</React.Fragment>\r\n\t);\r\n\r\n\tconst renderPastBoards = () => {\r\n\t\treturn (\r\n\t\t\t<Grid container item xs={9} spacing={3}>\r\n\t\t\t\t{boards.map((board, i) => (\r\n\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t<Card variant=\"outlined\">\r\n\t\t\t\t\t\t\t<CardContent style={{ height: '8ch' }}>\r\n\t\t\t\t\t\t\t\t<Typography variant=\"body1\" gutterBottom>\r\n\t\t\t\t\t\t\t\t\t{board.title}\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t<Typography variant=\"body2\" color=\"textSecondary\" gutterBottom>\r\n\t\t\t\t\t\t\t\t\t{getTypeString(board.type)}\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t</CardContent>\r\n\t\t\t\t\t\t\t<CardActions>\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\tonClick={() => (window.location.href = `/boards/play/${board._id}`)}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tPlay!\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t<IconButton onClick={() => copyUrl(board._id)}>\r\n\t\t\t\t\t\t\t\t\t<ShareIcon />\r\n\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t<IconButton onClick={() => handleStar(board._id, board.starred, i)}>\r\n\t\t\t\t\t\t\t\t\t<StarIcon style={{ fill: board.starred ? 'gold' : '' }} />\r\n\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t</CardActions>\r\n\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t))}\r\n\t\t\t</Grid>\r\n\t\t);\r\n\t};\r\n\r\n\tconst renderBoards = () => {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<Grid container item xs={9} spacing={3} style={{ marginBottom: '15px' }}>\r\n\t\t\t\t\t<Typography component=\"h2\" variant=\"h5\" color=\"inherit\" align=\"center\" noWrap>\r\n\t\t\t\t\t\tStarred Boards\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t{renderStarredBoards()}\r\n\t\t\t\t<Grid\r\n\t\t\t\t\tcontainer\r\n\t\t\t\t\titem\r\n\t\t\t\t\txs={9}\r\n\t\t\t\t\tspacing={3}\r\n\t\t\t\t\tstyle={{ marginBottom: '15px', borderTop: '0.1em dotted grey' }}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Typography component=\"h2\" variant=\"h5\" color=\"inherit\" align=\"center\" noWrap>\r\n\t\t\t\t\t\tPast Boards\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t{renderPastBoards()}\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"ViewMyBoards\">\r\n\t\t\t<Grid container spacing={1} justify=\"center\" style={{ marginTop: '30px' }}>\r\n\t\t\t\t{boards.length === 0 ? renderCreateBoard() : renderBoards()}\r\n\t\t\t</Grid>\r\n\t\t\t<Snackbar open={isCopied} autoHideDuration={5000} onClose={() => setCopied(false)}>\r\n\t\t\t\t<Alert onClose={() => setCopied(false)} severity=\"success\">\r\n\t\t\t\t\tThe board URL was successfully copied to your clipboard!\r\n\t\t\t\t</Alert>\r\n\t\t\t</Snackbar>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import { createContext } from 'react';\r\n\r\nexport const AuthContext = createContext({\r\n\tname: null,\r\n\tisAnon: true,\r\n\temail: null,\r\n\tgetUser: () => {},\r\n\tlogin: (name, email) => {},\r\n\tlogout: () => {}\r\n});\r\n","import React, { useContext } from 'react';\r\nimport { Stitch, GoogleRedirectCredential } from 'mongodb-stitch-browser-sdk';\r\nimport { AuthContext } from '../AuthContext';\r\nimport { Button, Tooltip } from '@material-ui/core';\r\n\r\nexport default function Login() {\r\n\tconst authContext = useContext(AuthContext);\r\n\tconst [\r\n\t\tcurrentUser,\r\n\t\tsetCurrentUser\r\n\t] = React.useState(null);\r\n\tconst [\r\n\t\tauthAction,\r\n\t\tsetAuthAction\r\n\t] = React.useState(null);\r\n\r\n\tconst handleClick = (action) => {\r\n\t\tsetAuthAction(action);\r\n\t};\r\n\r\n\tReact.useEffect(\r\n\t\t() => {\r\n\t\t\tconst authenticate = async () => {\r\n\t\t\t\t// Below code runs on mount to get current user if already authenticated\r\n\t\t\t\tconst appId = 'gsvbingo-bbxfg';\r\n\r\n\t\t\t\tconst client = Stitch.hasAppClient(appId)\r\n\t\t\t\t\t? Stitch.getAppClient(appId)\r\n\t\t\t\t\t: Stitch.initializeAppClient(appId);\r\n\r\n\t\t\t\tif (client.auth.hasRedirectResult()) {\r\n\t\t\t\t\tawait client.auth.handleRedirectResult().then((user) => console.log(user)).catch(console.error);\r\n\t\t\t\t\tconsole.log('Processed redirect result.');\r\n\t\t\t\t}\r\n\t\t\t\tif (client.auth.isLoggedIn) {\r\n\t\t\t\t\tsetCurrentUser(client.auth.user.profile.name);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Below code runs after button is pressed\r\n\t\t\t\tif (authAction !== null) {\r\n\t\t\t\t\tif (authAction === 'continue') {\r\n\t\t\t\t\t\t// Continue to GSV-Bingo with current account\r\n\t\t\t\t\t\tauthContext.login(client.auth.user.profile.name, client.auth.user.profile.email);\r\n\t\t\t\t\t\twindow.location.replace('/');\r\n\t\t\t\t\t} else if (authAction === 'login') {\r\n\t\t\t\t\t\t// Log into Google account\r\n\t\t\t\t\t\tauthContext.logout();\r\n\t\t\t\t\t\tconst credential = new GoogleRedirectCredential();\r\n\t\t\t\t\t\tclient.auth\r\n\t\t\t\t\t\t\t.loginWithRedirect(credential)\r\n\t\t\t\t\t\t\t.then((user) => {\r\n\t\t\t\t\t\t\t\tauthContext.login(client.auth.user.profile.name, client.auth.user.profile.email);\r\n\t\t\t\t\t\t\t\twindow.location.replace('/');\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t.catch((err) => console.log('Login error: ', err));\r\n\t\t\t\t\t} else if (authAction === 'skip') {\r\n\t\t\t\t\t\t// Continue to GSV-Bingo as anonymous\r\n\t\t\t\t\t\tclient.auth.logout().then((user) => authContext.logout());\r\n\t\t\t\t\t\twindow.location.replace('/');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tauthenticate();\r\n\t\t},\r\n\t\t[\r\n\t\t\tauthAction\r\n\t\t]\r\n\t);\r\n\r\n\tconst renderNotLoggedIn = () => (\r\n\t\t<React.Fragment>\r\n\t\t\t<h3>You are not logged in! Please authenticate with Google to play Google Street View Bingo.</h3>\r\n\t\t\t<p>DO NOT LOG IN IF YOU ARE ON A PUBLIC COMPUTER!</p>\r\n\t\t\t<Button onClick={() => handleClick('login')}>Log In</Button>\r\n\t\t\t<Tooltip title=\"Skipping login will let you use the site anonymously, but your boards will not be saved!\">\r\n\t\t\t\t<Button onClick={() => handleClick('skip')}>No Thanks</Button>\r\n\t\t\t</Tooltip>\r\n\t\t</React.Fragment>\r\n\t);\r\n\r\n\tconst renderLoggedIn = () => (\r\n\t\t<React.Fragment>\r\n\t\t\t<h3>Welcome back!</h3>\r\n\t\t\t<Button onClick={() => handleClick('continue')}>Continue as {currentUser}</Button>\r\n\t\t\t{/* <Tooltip title=\"You will be prompted to switch accounts.\">\r\n\t\t\t\t<Button onClick={() => handleClick('login')}>Not {currentUser}</Button>\r\n\t\t\t</Tooltip> */}\r\n\t\t\t<Tooltip title=\"Skipping login will let you use the site anonymously, but your boards will not be saved!\">\r\n\t\t\t\t<Button onClick={() => handleClick('skip')}>Continue as Anonymous</Button>\r\n\t\t\t</Tooltip>\r\n\t\t</React.Fragment>\r\n\t);\r\n\r\n\treturn <div className=\"Login\">{currentUser !== null ? renderLoggedIn() : renderNotLoggedIn()}</div>;\r\n}\r\n","import React from 'react';\r\nimport { Grid } from '@material-ui/core';\r\n\r\nexport default function Rules(props) {\r\n\treturn (\r\n\t\t<div className=\"About\">\r\n\t\t\t<Grid container direction=\"colummn\" justify=\"center\" alignItems=\"center\">\r\n\t\t\t\t<Grid container item xs={6} direction=\"colummn\" justify=\"center\" alignItems=\"center\">\r\n\t\t\t\t\t<Grid>\r\n\t\t\t\t\t\t<h3>Suggestion Etiquette</h3>\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\tWhen submitting suggestions, please follow the guidelines listed below. Users can vote on\r\n\t\t\t\t\t\t\tsuggestions, and any suggestion with a score below the threshold will be automatically\r\n\t\t\t\t\t\t\tdeleted. Suggestions will also be periodically monitored, and suggestions not following the\r\n\t\t\t\t\t\t\tcommunity guidelines will be manually removed.\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t<ol>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\tAvoid offensive words and phrases. This includes any racism, homophobia, transphobia, or\r\n\t\t\t\t\t\t\t\tany other bigotry.\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\tWhile not explicitly encouraged, light swearing is allowed in suggestions. This website\r\n\t\t\t\t\t\t\t\tisn't designed for kids, so as long as you don't use excessive toxic language your\r\n\t\t\t\t\t\t\t\tsuggestion will be safe.\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\tGoing along with the above guideline, feel free to make suggestions that may surpass a\r\n\t\t\t\t\t\t\t\tPG-13 rating, but avoid overly inappropriate language/imagery. Just think whether your\r\n\t\t\t\t\t\t\t\tsuggestion would be safe to show on screen if someone was streaming.\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\tMake sure that your suggestions are possible. Keep in mind that games are designed to be\r\n\t\t\t\t\t\t\t\tcompleted in 20 minutes, so maybe test out your suggestions yourself before submitting.\r\n\t\t\t\t\t\t\t\tAlso, make sure fill out the difficulty of to suggestion as closely as possible.\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>Please only use English in your suggestions.</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\tDouble check your spelling and grammar before submitting. Also, try to keep the\r\n\t\t\t\t\t\t\t\tsuggestions concise so that they will fit on the bingo pieces (less than 15 words).\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\tBefore adding suggestions, consider browsing through the existing suggestions to see if\r\n\t\t\t\t\t\t\t\tyour ideas are already in the database. If you want to avoid spoilers, you do not need\r\n\t\t\t\t\t\t\t\tto do this, but users may report duplicate suggestions which may be deleted.\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t</ol>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid>\r\n\t\t\t\t\t\t<h3>Reporting a Suggestion</h3>\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\tWhen viewing all suggestions, feel free to downvote and upvote suggestions as you deem fit.\r\n\t\t\t\t\t\t\tIf a suggestion's score goes below a certain threshold, it feel be removed. Any suggestion\r\n\t\t\t\t\t\t\tthat does not adhere to the suggestion etiquette above is fair game for downvoting. However,\r\n\t\t\t\t\t\t\tonly use the Report button for the following reasons:\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t<li>Suggestion is racist, homophobic, transphobic, etc.</li>\r\n\t\t\t\t\t\t\t<li>Suggestion is extremely vulgar and makes you feel uncomfortable using the website.</li>\r\n\t\t\t\t\t\t\t<li>Suggestion is a duplicate.</li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid>\r\n\t\t\t\t\t\t<h3>General Guidelines</h3>\r\n\t\t\t\t\t\t<ol>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\tOnly sign in with your Google account if you are on a private device. This website does\r\n\t\t\t\t\t\t\t\tnot have any permissions to control your Google account, nor does it keep any sensitive\r\n\t\t\t\t\t\t\t\tdata. However, due to the way Google authentication works, your email address and name\r\n\t\t\t\t\t\t\t\tmay linger in local storage even after you log out.\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\tDon't abuse the suggestion/feedback form. If you found a bug, have any suggestions on\r\n\t\t\t\t\t\t\t\thow to improve the website, or have any general feedback that you would like to share,\r\n\t\t\t\t\t\t\t\tplease do. However, the form sends an email so try not to spam my inbox :)\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\tIf you enjoy the website, consider contributing by leaving your own suggestions! There\r\n\t\t\t\t\t\t\t\tare over a thousand unique boards so far, but far fewer suggestions. To keep the website\r\n\t\t\t\t\t\t\t\tenjoyable for yourself and others, leave a suggestion or two every time you play a round\r\n\t\t\t\t\t\t\t\tof bingo!\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t</ol>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React from 'react';\r\nimport { Grid } from '@material-ui/core';\r\n\r\nexport default function ContactMe(props) {\r\n\treturn (\r\n\t\t<div className=\"About\">\r\n\t\t\t<Grid container direction=\"colummn\" justify=\"center\" alignItems=\"center\">\r\n\t\t\t\t<Grid container item xs={6} direction=\"colummn\" justify=\"center\" alignItems=\"center\">\r\n\t\t\t\t\t<Grid>\r\n\t\t\t\t\t\t<h3>Contact Me</h3>\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\tMy name is CJ, and I am studying Systems Analysis & Design at Purdue University. In my free\r\n\t\t\t\t\t\t\ttime I like to code and make random stuff. Right now, Google Street View Bingo is one of my\r\n\t\t\t\t\t\t\tfew side projects I am working on in rotation, and I am hoping to release new updates to the\r\n\t\t\t\t\t\t\twebsite every couple months. If you have any suggestions or feedback on the website, please\r\n\t\t\t\t\t\t\tuse the form which can be found in the menu bar at the top of the page or{' '}\r\n\t\t\t\t\t\t\t<a href=\"/feedback\">here</a>. For personal or business inquiries, you may contact me through\r\n\t\t\t\t\t\t\tthe platforms below:\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t<li>Reddit - cdw2014_</li>\r\n\t\t\t\t\t\t\t<li>Discord - cdw2014#3949</li>\r\n\t\t\t\t\t\t\t<li>Email - cdw2014@gmail.com</li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React from 'react';\r\nimport { TextField, Grid, Button, MenuItem } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Snackbar } from '@material-ui/core';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { TextareaAutosize } from '@material-ui/core';\r\nconst axios = require('axios');\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot : {\r\n\t\t'& .MuiTextField-root' : {\r\n\t\t\tmargin   : theme.spacing(1),\r\n\t\t\twidth    : '25ch',\r\n\t\t\tflexGrow : 1\r\n\t\t}\r\n\t}\r\n}));\r\n\r\nfunction Alert(props) {\r\n\treturn <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nexport default function SuggestionForm(props) {\r\n\tconst classes = useStyles();\r\n\tconst [\r\n\t\ttype,\r\n\t\tsetType\r\n\t] = React.useState('Unknown');\r\n\tconst [\r\n\t\tdidSubmit,\r\n\t\tsetDidSubmit\r\n\t] = React.useState(false);\r\n\r\n\tconst handleClose = (event, reason) => {\r\n\t\tif (reason === 'clickaway') {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetDidSubmit(false);\r\n\t};\r\n\r\n\tconst handleChange = (event) => {\r\n\t\tconsole.log(event.target);\r\n\t\tsetType(event.target.value);\r\n\t};\r\n\r\n\tconst handleSubmit = (event) => {\r\n\t\taxios.post(`https://gsv-bingo.herokuapp.com/api/mail`, {\r\n\t\t\tsubject : `[${type}] GSV-Bingo Feedback`,\r\n\t\t\ttext    : `${event.target[2].value}\\n\\nFrom:${event.target[4].value}\\n${event.target[5].value}`\r\n\t\t});\r\n\t\tevent.preventDefault();\r\n\t\tevent.target[0].value = '';\r\n\t\tevent.target[1].value = '';\r\n\t\tevent.target[2].value = '';\r\n\t\tevent.target[3].value = '';\r\n\t\tsetType('Unknown');\r\n\t\tsetDidSubmit(true);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Grid\r\n\t\t\tcontainer\r\n\t\t\tdirection=\"column\"\r\n\t\t\tjustify=\"center\"\r\n\t\t\talignItems=\"center\"\r\n\t\t\tspacing={2}\r\n\t\t\tstyle={{ marginTop: '15px' }}\r\n\t\t>\r\n\t\t\t<Grid item xs={4}>\r\n\t\t\t\t<h3>Give Feedback</h3>\r\n\t\t\t\t<p>\r\n\t\t\t\t\tFill out the form to give feedback or suggestions for this website. You may report bugs, request new\r\n\t\t\t\t\tfeatures, or just give any general feedback on the website. If you would like a follow up on your\r\n\t\t\t\t\tfeedback, please enter an email address.\r\n\t\t\t\t</p>\r\n\t\t\t</Grid>\r\n\t\t\t<form className={classes.root} autoComplete=\"off\" onSubmit={(e) => handleSubmit(e)}>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Grid container alignItems=\"center\" justify=\"center\" direction=\"column\" spacing={3}>\r\n\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t<TextField required id=\"subject\" label=\"Required\" placeholder=\"Subject\" />\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\tid=\"select-type\"\r\n\t\t\t\t\t\t\t\tselect\r\n\t\t\t\t\t\t\t\tvalue={type}\r\n\t\t\t\t\t\t\t\thelperText=\"Type of feedback\"\r\n\t\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{[\r\n\t\t\t\t\t\t\t\t\t{ text: 'General Feedback', id: 0 },\r\n\t\t\t\t\t\t\t\t\t{ text: 'Feature Request', id: 1 },\r\n\t\t\t\t\t\t\t\t\t{ text: 'Report a Bug', id: 2 },\r\n\t\t\t\t\t\t\t\t\t{ text: 'Style/Design Suggestion', id: 3 }\r\n\t\t\t\t\t\t\t\t].map((option) => (\r\n\t\t\t\t\t\t\t\t\t<MenuItem key={option.id} value={option.text}>\r\n\t\t\t\t\t\t\t\t\t\t{option.text}\r\n\t\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</TextField>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<TextareaAutosize\r\n\t\t\t\t\t\t\taria-label=\"empty textarea\"\r\n\t\t\t\t\t\t\tplaceholder=\"Enter feedback here...\"\r\n\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t<TextField id=\"name\" label=\"Your Name\" />\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t<TextField id=\"email\" label=\"Email Address\" />\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t<Button variant=\"contained\" type=\"submit\" color=\"primary\" id=\"submit\">\r\n\t\t\t\t\t\t\t\tSubmit\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\r\n\t\t\t<Snackbar open={didSubmit} autoHideDuration={5000} onClose={handleClose}>\r\n\t\t\t\t<Alert onClose={handleClose} severity=\"success\">\r\n\t\t\t\t\tFeedback was successfully submitted! Please allow up to 24 hours for a reply!\r\n\t\t\t\t</Alert>\r\n\t\t\t</Snackbar>\r\n\t\t</Grid>\r\n\t);\r\n}\r\n","import React from 'react';\r\nimport {\r\n\tTextField,\r\n\tGrid,\r\n\tCard,\r\n\tButton,\r\n\tFormControl,\r\n\tFormControlLabel,\r\n\tRadioGroup,\r\n\tRadio,\r\n\tCheckbox,\r\n\tTypography,\r\n\tCardContent,\r\n\tCardActions,\r\n\tIconButton,\r\n\tDialog,\r\n\tDialogTitle,\r\n\tDialogContent,\r\n\tDialogContentText,\r\n\tDialogActions,\r\n\tMenuItem\r\n} from '@material-ui/core';\r\nimport { Snackbar } from '@material-ui/core';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport ThumbDown from '@material-ui/icons/ThumbDown';\r\nimport ThumbUp from '@material-ui/icons/ThumbUp';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst axios = require('axios');\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot : {\r\n\t\t'& .MuiTextField-root' : {\r\n\t\t\tmargin : theme.spacing(1),\r\n\t\t\twidth  : '25ch'\r\n\t\t}\r\n\t}\r\n}));\r\n\r\nfunction Alert(props) {\r\n\treturn <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nexport default function ViewAllSuggestions(props) {\r\n\tconst classes = useStyles();\r\n\tconst { user } = props;\r\n\tconst [\r\n\t\tpageInfo,\r\n\t\tsetPageInfo\r\n\t] = React.useState({ page: 1, max: 1 });\r\n\tconst [\r\n\t\tsuggestions,\r\n\t\tsetSuggestions\r\n\t] = React.useState([]);\r\n\tconst [\r\n\t\tuserVotes,\r\n\t\tsetUserVotes\r\n\t] = React.useState([]);\r\n\tconst [\r\n\t\tisLoading,\r\n\t\tsetLoading\r\n\t] = React.useState(true);\r\n\tconst [\r\n\t\tisReported,\r\n\t\tsetReported\r\n\t] = React.useState(false);\r\n\tconst [\r\n\t\treporting,\r\n\t\tsetReporting\r\n\t] = React.useState({});\r\n\tconst [\r\n\t\treason,\r\n\t\tsetReason\r\n\t] = React.useState(null);\r\n\r\n\tReact.useEffect(\r\n\t\t() => {\r\n\t\t\taxios\r\n\t\t\t\t.get(`https://gsv-bingo.herokuapp.com/api/suggestions/page=${pageInfo.page}&num=32`)\r\n\t\t\t\t.then((data) => data.data)\r\n\t\t\t\t.then((fetchedSuggestions) => {\r\n\t\t\t\t\tconsole.log(fetchedSuggestions);\r\n\t\t\t\t\tsetPageInfo({ ...pageInfo, max: fetchedSuggestions.maxPages });\r\n\t\t\t\t\tsetSuggestions(fetchedSuggestions.suggestions);\r\n\t\t\t\t\tlet _userVotes = [];\r\n\t\t\t\t\tfetchedSuggestions.suggestions.forEach((suggestion) => {\r\n\t\t\t\t\t\tconst userVoteArray = suggestion.votes.filter((v) => v.email === user.email);\r\n\t\t\t\t\t\tif (userVoteArray.length) {\r\n\t\t\t\t\t\t\t_userVotes.push(userVoteArray[0]);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t_userVotes.push({ email: user.email, vote: 0 });\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\tsetUserVotes(_userVotes);\r\n\t\t\t\t})\r\n\t\t\t\t.then(() => setLoading(false));\r\n\t\t},\r\n\t\t[\r\n\t\t\tpageInfo.page\r\n\t\t]\r\n\t);\r\n\r\n\tconst handleVote = (id, vote, index) => {\r\n\t\tif (user.email === null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet items = [\r\n\t\t\t...userVotes\r\n\t\t];\r\n\t\tif (items[index].score === vote) {\r\n\t\t\titems[index] = {\r\n\t\t\t\temail : user.email,\r\n\t\t\t\tscore : 0\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\titems[index] = {\r\n\t\t\t\temail : user.email,\r\n\t\t\t\tscore : vote\r\n\t\t\t};\r\n\t\t}\r\n\t\tsetUserVotes(items);\r\n\t\tlet newVotes = votesToString(suggestions[index].votes, items[index]);\r\n\t\taxios.put(`https://gsv-bingo.herokuapp.com/api/suggestions/id=${id}&votes=${newVotes}`);\r\n\t};\r\n\r\n\tconst votesToString = (votes, vote) => {\r\n\t\tlet found = false;\r\n\t\tvotes.forEach((v, i) => {\r\n\t\t\tif (v.email === user.email) {\r\n\t\t\t\tfound = true;\r\n\t\t\t\tif (v.score === vote.score) {\r\n\t\t\t\t\tvotes[i].score = 0;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvotes[i] = vote;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\tif (!found) {\r\n\t\t\tvotes.push(vote);\r\n\t\t}\r\n\t\tconsole.log('after', votes);\r\n\t\tlet str = '';\r\n\t\tvotes.forEach((v) => {\r\n\t\t\tstr += v.email;\r\n\t\t\tstr += ',';\r\n\t\t\tstr += v.score;\r\n\t\t\tstr += '--delim--';\r\n\t\t});\r\n\t\tstr = str.slice(0, -3);\r\n\t\treturn str;\r\n\t};\r\n\r\n\tconst votesFromString = (str) => {\r\n\t\tlet data = str.split('--delim--');\r\n\t\tconsole.log('DATA:', data);\r\n\t\tlet votes = [];\r\n\t\tdata.forEach((v) => {\r\n\t\t\tconsole.log('v:', v);\r\n\t\t\tconst voteData = v.split(',');\r\n\t\t\tvotes.push({ email: voteData[0], score: parseInt(voteData[1]) });\r\n\t\t});\r\n\t\treturn votes;\r\n\t};\r\n\r\n\tconst getVoteColor = (i, icon) => {\r\n\t\tlet color = 'default';\r\n\t\tif (userVotes[i]) {\r\n\t\t\tif (userVotes[i].score === 1 && icon === 1) {\r\n\t\t\t\tcolor = 'primary';\r\n\t\t\t} else if (userVotes[i].score === -1 && icon === -1) {\r\n\t\t\t\tcolor = 'secondary';\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn color;\r\n\t};\r\n\r\n\tconst getScore = (votes) => {\r\n\t\tlet score = 0;\r\n\t\tvotes.forEach((vote) => (score += vote.score));\r\n\t\treturn score;\r\n\t};\r\n\r\n\tconst handlePagation = (x) => {\r\n\t\tconsole.log(isLoading);\r\n\t\tsetLoading(true);\r\n\t\tif (!isLoading) {\r\n\t\t\tsetPageInfo({ ...pageInfo, page: pageInfo.page + x });\r\n\t\t}\r\n\t};\r\n\r\n\tconst renderPagation = () => (\r\n\t\t<Grid container item xs={9} justify=\"space-between\" spacing={3}>\r\n\t\t\t<Grid item>\r\n\t\t\t\t<Button disabled={pageInfo.page === 1} onClick={() => handlePagation(-1)}>\r\n\t\t\t\t\t{'< Back'}\r\n\t\t\t\t</Button>\r\n\t\t\t</Grid>\r\n\t\t\t<Grid item>\r\n\t\t\t\t<Typography variant=\"body1\" gutterBottom>\r\n\t\t\t\t\tPage {pageInfo.page} / {pageInfo.max}\r\n\t\t\t\t</Typography>\r\n\t\t\t</Grid>\r\n\t\t\t<Grid item>\r\n\t\t\t\t<Button disabled={pageInfo.page === pageInfo.max} onClick={() => handlePagation(1)}>\r\n\t\t\t\t\t{'Next >'}\r\n\t\t\t\t</Button>\r\n\t\t\t</Grid>\r\n\t\t</Grid>\r\n\t);\r\n\r\n\tconst renderSuggestions = () => {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<Grid container item xs={9} spacing={3} style={{ marginBottom: '15px' }}>\r\n\t\t\t\t\t<Typography component=\"h2\" variant=\"h5\" color=\"inherit\" align=\"center\" noWrap>\r\n\t\t\t\t\t\tRecent Suggestions\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t{renderPagation()}\r\n\t\t\t\t<Grid container item xs={9} spacing={3}>\r\n\t\t\t\t\t{suggestions.map((suggestion, i) => (\r\n\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t<Card variant=\"outlined\">\r\n\t\t\t\t\t\t\t\t<CardContent style={{ height: '8ch' }}>\r\n\t\t\t\t\t\t\t\t\t<Typography variant=\"body1\" gutterBottom>\r\n\t\t\t\t\t\t\t\t\t\t{suggestion.suggestion}\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t<Typography noWrap variant=\"body2\" color=\"textSecondary\" gutterBottom>\r\n\t\t\t\t\t\t\t\t\t\tBy {suggestion.name ? suggestion.name : 'Anonymous'}\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t<Typography variant=\"body2\" color=\"textSecondary\" gutterBottom>\r\n\t\t\t\t\t\t\t\t\t\tDifficulty: {suggestion.difficulty}\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t</CardContent>\r\n\t\t\t\t\t\t\t\t<CardActions>\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tdisabled={!user.email}\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\t\tcolor=\"secondary\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => setReporting(suggestion)}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tReport\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\t\tdisabled={!user.email}\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => handleVote(suggestion._id, 1, i)}\r\n\t\t\t\t\t\t\t\t\t\tcolor={getVoteColor(i, 1)}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<ThumbUp />\r\n\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t\t{getScore(suggestion.votes)}\r\n\t\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\t\tdisabled={!user.email}\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => handleVote(suggestion._id, -1, i)}\r\n\t\t\t\t\t\t\t\t\t\tcolor={getVoteColor(i, -1)}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<ThumbDown />\r\n\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t</CardActions>\r\n\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Grid>\r\n\t\t\t\t{renderPagation()}\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"ViewMyBoards\">\r\n\t\t\t<Grid container spacing={1} justify=\"center\" style={{ marginTop: '30px' }}>\r\n\t\t\t\t{suggestions.length !== 0 ? renderSuggestions() : <div>Loading...</div>}\r\n\t\t\t</Grid>\r\n\t\t\t<Dialog title=\"report-modal\" open={reporting.suggestion} modal={true}>\r\n\t\t\t\t<DialogTitle>Reporting a Suggestion</DialogTitle>\r\n\t\t\t\t<DialogContent>\r\n\t\t\t\t\t<Card style={{ backgroundColor: '#f3b6a8' }} variant=\"outlined\">\r\n\t\t\t\t\t\t<CardContent style={{ height: '8ch' }}>\r\n\t\t\t\t\t\t\t<Typography variant=\"body1\" gutterBottom>\r\n\t\t\t\t\t\t\t\t{reporting.suggestion}\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t<Typography noWrap variant=\"body2\" color=\"textSecondary\" gutterBottom>\r\n\t\t\t\t\t\t\t\tBy {reporting.name ? reporting.name : 'Anonymous'}\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t<Typography variant=\"body2\" color=\"textSecondary\" gutterBottom>\r\n\t\t\t\t\t\t\t\tDifficulty: {reporting.difficulty}\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</CardContent>\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t\t<Typography gutterBottom>Select a reason for reporting the above suggestion:</Typography>\r\n\t\t\t\t\t<form\r\n\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t\tonSubmit={(e) => {\r\n\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\taxios.post(`https://gsv-bingo.herokuapp.com/api/mail`, {\r\n\t\t\t\t\t\t\t\tsubject : `[Report] GSV-Bingo Report`,\r\n\t\t\t\t\t\t\t\ttext    : `Suggestion:\\n${reporting.suggestion}\\n\\nBy: ${reporting.name}\\n\\nDifficulty: ${reporting.difficulty}\\n\\nReporter: ${user.name} - ${user.email}\\nReason:${reason}`\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tsetReporting({});\r\n\t\t\t\t\t\t\tsetReported(true);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tid=\"select-type\"\r\n\t\t\t\t\t\t\tselect\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\tvalue={reason}\r\n\t\t\t\t\t\t\thelperText=\"Report Reason\"\r\n\t\t\t\t\t\t\tonChange={(event) => setReason(event.target.value)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{[\r\n\t\t\t\t\t\t\t\t{ text: 'Racism or Other Bigotry', id: 0 },\r\n\t\t\t\t\t\t\t\t{ text: 'Vulgar Language', id: 1 },\r\n\t\t\t\t\t\t\t\t{ text: 'Duplicate Suggestion', id: 2 }\r\n\t\t\t\t\t\t\t].map((option) => (\r\n\t\t\t\t\t\t\t\t<MenuItem key={option.id} value={option.text}>\r\n\t\t\t\t\t\t\t\t\t{option.text}\r\n\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</TextField>\r\n\t\t\t\t\t\t<Button type=\"submit\" color=\"secondary\">\r\n\t\t\t\t\t\t\tReport\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button onClick={() => setReporting({})} color=\"primary\" autoFocus>\r\n\t\t\t\t\t\t\tCancel\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</DialogContent>\r\n\t\t\t\t{/* <DialogActions>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tsetReporting({});\r\n\t\t\t\t\t\t\tsetReported(true);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tcolor=\"secondary\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tReport\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button onClick={() => setReporting({})} color=\"primary\" autoFocus>\r\n\t\t\t\t\t\tCancel\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</DialogActions> */}\r\n\t\t\t</Dialog>\r\n\t\t\t<Snackbar open={isReported} autoHideDuration={5000} onClose={() => setReported(false)}>\r\n\t\t\t\t<Alert onClose={() => setReported(false)} severity=\"success\">\r\n\t\t\t\t\tThank you for helping keep the site clean!\r\n\t\t\t\t</Alert>\r\n\t\t\t</Snackbar>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport Home from './components/Home';\r\nimport NavBar from './components/NavBar';\r\nimport SuggestionForm from './components/SuggestionForm';\r\nimport Header from './components/Header';\r\nimport CreateBoardForm from './components/CreateBoardForm';\r\nimport GameBoard from './components/GameBoard';\r\nimport ViewMyBoards from './components/ViewMyBoards';\r\nimport Login from './components/Login';\r\nimport About from './components/About';\r\nimport Rules from './components/Rules';\r\nimport ContactMe from './components/ContactMe';\r\nimport FeedbackForm from './components/FeedbackForm';\r\nimport { AuthContext } from './AuthContext';\r\nimport { Snackbar } from '@material-ui/core';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport ViewAllSuggestions from './components/ViewAllSuggestions';\r\n\r\nconst sections = [\r\n\t{ title: 'About GSV Bingo', url: '/about' },\r\n\t{ title: 'Rules and Guidelines', url: '/rules' },\r\n\t{ title: 'Contact Me', url: '/contact-me' },\r\n\t{ title: 'Suggestion/Feedback Form', url: '/feedback' },\r\n\t{ title: 'Random Street View (Inspiration)', url: 'https://www.mapcrunch.com' },\r\n\t{ title: 'Buy Me A Coffee', url: 'https://www.paypal.com/paypalme/cdw2014' }\r\n];\r\n\r\nfunction Alert(props) {\r\n\treturn <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nfunction App() {\r\n\tconst authContext = React.useContext(AuthContext);\r\n\tconst [\r\n\t\tuser,\r\n\t\tsetUser\r\n\t] = React.useState(JSON.parse(localStorage.getItem('userAuth')) || { name: null, email: null, isAnon: true });\r\n\tconst [\r\n\t\topen,\r\n\t\tsetOpen\r\n\t] = React.useState(true);\r\n\r\n\tconst handleClose = (event, reason) => {\r\n\t\tif (reason === 'clickaway') {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetOpen(false);\r\n\t};\r\n\r\n\tconst login = (name, email) => {\r\n\t\tsetUser({ name: name, email: email, isAnon: false });\r\n\t\tlocalStorage.setItem('userAuth', JSON.stringify({ name: name, email: email, isAnon: false }));\r\n\t};\r\n\r\n\tconst logout = () => {\r\n\t\tsetUser({ name: null, isAnon: true });\r\n\t\tlocalStorage.setItem('userAuth', JSON.stringify({ name: null, email: null, isAnon: true }));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"App\">\r\n\t\t\t<Header title=\"Google Street View Bingo\" sections={sections} user={user} />\r\n\t\t\t<Router>\r\n\t\t\t\t<Switch>\r\n\t\t\t\t\t<AuthContext.Provider value={{ login: login, logout: logout }}>\r\n\t\t\t\t\t\t<Route exact path=\"/\" component={Home} />\r\n\t\t\t\t\t\t<Route\r\n\t\t\t\t\t\t\texact\r\n\t\t\t\t\t\t\tpath=\"/suggestions/submit*\"\r\n\t\t\t\t\t\t\trender={(props) => <SuggestionForm {...props} user={user} />}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Route\r\n\t\t\t\t\t\t\texact\r\n\t\t\t\t\t\t\tpath=\"/boards/create\"\r\n\t\t\t\t\t\t\trender={(props) => <CreateBoardForm {...props} user={user} />}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Route path=\"/boards/play/:gameId\" render={(props) => <GameBoard {...props} user={user} />} />\r\n\t\t\t\t\t\t<Route path=\"/boards/view\" render={(props) => <ViewMyBoards {...props} user={user} />} />\r\n\t\t\t\t\t\t<Route\r\n\t\t\t\t\t\t\tpath=\"/suggestions/view/all\"\r\n\t\t\t\t\t\t\trender={(props) => <ViewAllSuggestions {...props} user={user} />}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Route path=\"/login\" component={Login} />\r\n\t\t\t\t\t\t<Route exact path=\"/about\" render={(props) => <About {...props} user={user} />} />\r\n\t\t\t\t\t\t<Route exact path=\"/rules\" render={(props) => <Rules {...props} user={user} />} />\r\n\t\t\t\t\t\t<Route exact path=\"/contact-me\" render={(props) => <ContactMe {...props} user={user} />} />\r\n\t\t\t\t\t\t<Route exact path=\"/feedback\" render={(props) => <FeedbackForm {...props} user={user} />} />\r\n\t\t\t\t\t</AuthContext.Provider>\r\n\t\t\t\t</Switch>\r\n\t\t\t</Router>\r\n\t\t\t{user.isAnon ? (\r\n\t\t\t\t<Snackbar open={open} autoHideDuration={10000} onClose={handleClose}>\r\n\t\t\t\t\t<Alert onClose={handleClose} severity=\"warning\">\r\n\t\t\t\t\t\tYou are not signed in with Google! Your data will not be saved to your account, and you cannot\r\n\t\t\t\t\t\tvote or report suggestions!\r\n\t\t\t\t\t</Alert>\r\n\t\t\t\t</Snackbar>\r\n\t\t\t) : null}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nrequire('dotenv').config();\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}